<!DOCTYPE html> <html> <head> <title>YouTube Mini Browser</title> <style> body { font-family: sans-serif; display: flex; justify-content: center; align-items: center; min-height: 100vh; background-color: #f0f0f0; } .container { width: 80%; max-width: 600px; text-align: center; } input, button { padding: 10px; margin: 5px; font-size: 16px; } #videos { margin-top: 20px; display: grid; grid-template-columns: repeat(2, 1fr); grid-gap: 10px; } .video { background: #fff; padding: 10px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); } .video img { max-width: 100%; border-radius: 8px; } .video-title { font-size: 14px; margin: 10px 0 5px; font-weight: bold; } .video-link { color: #007bff; text-decoration: none; cursor: pointer; } iframe { width: 100%; height: 315px; border: none; border-radius: 8px; margin-top: 10px; } #loading { display: none; margin-top: 20px; } .fade-out { opacity: 0; transition: opacity 0.5s ease-in-out; } .fade-in { opacity: 1; transition: opacity 0.5s ease-in-out; } .show { display: block !important; } .video-info { text-align: left; margin-top: 10px; background: #fff; padding: 10px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); } .highlight { color: blue; cursor: pointer; } .countdown { color: red; font-weight: bold; } .update-indicator { color: red; } </style> </head> <body> <div class="container"> <h1>YouTube Mini Browser</h1> <input type="text" id="searchQuery" placeholder="Search for videos"> <button onclick="searchYouTube()">Search</button> <div id="loading">Loading...</div> <div id="videos"></div> </div> <script> const API_KEY = 'AIzaSyD5YexMPCanY3m9j0oHBxdTQ0OitwjSHBA'; let previousStats = {}; let currentVideoId = ''; let currentChannelId = ''; function searchYouTube() { const query = document.getElementById('searchQuery').value; const searchInput = document.getElementById('searchQuery'); const searchButton = document.querySelector('button[onclick="searchYouTube()"]'); const loadingDiv = document.getElementById('loading'); const videosDiv = document.getElementById('videos'); searchInput.classList.add('fade-out'); searchButton.classList.add('fade-out'); loadingDiv.classList.add('show'); setTimeout(() => { fetch(`https://www.googleapis.com/youtube/v3/search?part=snippet&q=${query}&type=video&key=${API_KEY}`) .then(response => response.json()) .then(data => { videosDiv.innerHTML = ''; data.items.forEach(item => { const videoElement = document.createElement('div'); videoElement.className = 'video'; videoElement.innerHTML = ` <img src="${item.snippet.thumbnails.medium.url}" alt="${item.snippet.title}"> <div class="video-title">${item.snippet.title}</div> <a href="#" class="video-link" onclick="displayVideo('${item.id.videoId}', '${item.snippet.channelId}')">Watch</a> <div class="video-info" id="video-info-${item.id.videoId}"></div> `; videosDiv.appendChild(videoElement); }); loadingDiv.classList.remove('show'); searchInput.classList.remove('fade-out'); searchInput.classList.add('fade-in'); searchButton.classList.remove('fade-out'); searchButton.classList.add('fade-in'); }) .catch(error => { console.error('Error fetching YouTube videos:', error); loadingDiv.classList.remove('show'); searchInput.classList.remove('fade-out'); searchInput.classList.add('fade-in'); searchButton.classList.remove('fade-out'); searchButton.classList.add('fade-in'); }); }, 500); } function displayVideo(videoId, channelId) { currentVideoId = videoId; currentChannelId = channelId; const videosDiv = document.getElementById('videos'); const videoFrame = document.createElement('iframe'); videoFrame.src = `https://www.youtube.com/embed/${videoId}`; videoFrame.allowFullscreen = true; videosDiv.innerHTML = ''; videosDiv.appendChild(videoFrame); const videoInfoDiv = document.createElement('div'); videoInfoDiv.className = 'fade-in'; videoInfoDiv.id = `video-info-${videoId}`; videosDiv.appendChild(videoInfoDiv); // Immediately show and update video info updateVideoInfo(videoId, channelId); } function updateVideoInfo(videoId, channelId) { fetch(`https://www.googleapis.com/youtube/v3/videos?part=snippet,statistics&id=${videoId}&key=${API_KEY}`) .then(response => response.json()) .then(data => { const video = data.items[0]; const currentStats = { views: video.statistics.viewCount, likes: video.statistics.likeCount, dislikes: video.statistics.dislikeCount, comments: video.statistics.commentCount }; const statsChange = calculateChange(previousStats, currentStats); previousStats = currentStats; document.getElementById(`video-info-${videoId}`).innerHTML = ` <p><strong>Published on:</strong> ${video.snippet.publishedAt}</p> <p><strong>Creator:</strong> <a class="highlight" href="https://www.youtube.com/channel/${channelId}" target="_blank">${video.snippet.channelTitle}</a></p> <p><strong>Likes:</strong> ${currentStats.likes} <span class="update-indicator">${statsChange.likes}</span></p> <p><strong>Dislikes:</strong> ${currentStats.dislikes} <span class="update-indicator">${statsChange.dislikes}</span></p> <p><strong>Comments:</strong> ${currentStats.comments} <span class="update-indicator">${statsChange.comments}</span></p> <p><strong>Views:</strong> ${currentStats.views} <span class="update-indicator">${statsChange.views}</span></p> <p class="countdown">Updating info in: <span id="countdown-${videoId}">10</span> seconds</p> `; startCountdown(videoId, channelId); }); } function calculateChange(previousStats, currentStats) { if (!previousStats.views) { return { views: 'No updates here', likes: 'No updates here', dislikes: 'No updates here', comments: 'No updates here' }; } const getChangeIndicator = (prev, curr) => { if (curr > prev) return `▲ ${curr - prev}`; if (curr < prev) return `▼ ${prev - curr}`; return '- No updates here'; }; return { views: getChangeIndicator(previousStats.views, currentStats.views), likes: getChangeIndicator(previousStats.likes, currentStats.likes), dislikes: getChangeIndicator(previousStats.dislikes, currentStats.dislikes), comments: getChangeIndicator(previousStats.comments, currentStats.comments) }; } function startCountdown(videoId, channelId) { let countdown = 10; const countdownElement = document.getElementById(`countdown-${videoId}`); const interval = setInterval(() => { countdown--; countdownElement.textContent = countdown; if (countdown === 0) { clearInterval(interval); updateVideoInfo(videoId, channelId); } }, 1000); } window.onload = () => { document.getElementById('videos').classList.add('fade-in'); }; </script> </body> </html>
